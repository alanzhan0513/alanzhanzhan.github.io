<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithm on Alan&#39;s Blog</title>
    <link>https://shuaizhan.dev/categories/algorithm/</link>
    <description>Recent content in Algorithm on Alan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 10 Jul 2021 18:50:40 +0800</lastBuildDate>
    
	<atom:link href="https://shuaizhan.dev/categories/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linear Search Algorithm</title>
      <link>https://shuaizhan.dev/post/2021-07-10-linear-search/</link>
      <pubDate>Sat, 10 Jul 2021 18:50:40 +0800</pubDate>
      
      <guid>https://shuaizhan.dev/post/2021-07-10-linear-search/</guid>
      <description>Linear Search Alogrithm 在查找一個元素是否存在的時候，我們最常使用的方式是甚麼呢？答案是 for 或者是 while 迴圈，恭喜你！已經學習完 Linear Search 了！ 概念 線性搜尋 (Linear Search)</description>
    </item>
    
    <item>
      <title>Divide and Conquer</title>
      <link>https://shuaizhan.dev/post/2021-07-07-divide-and-conquer/</link>
      <pubDate>Wed, 07 Jul 2021 23:56:34 +0800</pubDate>
      
      <guid>https://shuaizhan.dev/post/2021-07-07-divide-and-conquer/</guid>
      <description>分而治之 從字面上看起來，就是把一個複雜的問題分解成兩個或者很多個相同或者相似的問題，讓小問題可以被解決，再將最終結果合併求出問題的答案。 優點</description>
    </item>
    
    <item>
      <title>Big O Notation</title>
      <link>https://shuaizhan.dev/post/2021-07-06-big-o-notation/</link>
      <pubDate>Tue, 06 Jul 2021 23:56:58 +0800</pubDate>
      
      <guid>https://shuaizhan.dev/post/2021-07-06-big-o-notation/</guid>
      <description>如何選擇演算法來解決問題 同一個問題可以用不同的演算法來解決問題，但是選擇哪一個最好？有兩個指標可以評估一個算法的好壞： 時間複雜度 (花的時間)</description>
    </item>
    
  </channel>
</rss>